{
    "type": "ForStatement",
    "init": {
        "type": "VariableDeclaration",
        "kind": "let",
        "declarations": [
            {
                "type": "VariableDeclarator",
                "id": {
                    "type": "Identifier",
                    "name": "i"
                },
                "init": {
                    "type": "Literal",
                    "value": 0,
                    "raw": "0"
                },
                "dataType": "i32"
            }
        ]
    },
    "test": {
        "type": "BinaryExpression",
        "operator": "<",
        "left": {
            "type": "Identifier",
            "name": "i"
        },
        "right": {
            "type": "Literal",
            "value": 10,
            "raw": "10"
        }
    },
    "update": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
            "type": "Identifier",
            "name": "i"
        },
        "right": {
            "type": "BinaryExpression",
            "operator": "+",
            "left": {
                "type": "Identifier",
                "name": "i"
            },
            "right": {
                "type": "Literal",
                "value": 1,
                "raw": "1"
            }
        }
    },
    "body": {
        "type": "BlockStatement",
        "body": [
            {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "Identifier",
                        "name": "println"
                    },
                    "arguments": [
                        {
                            "type": "Literal",
                            "value": "i:",
                            "raw": "\"i:\""
                        },
                        {
                            "type": "Identifier",
                            "name": "i"
                        }
                    ]
                }
            }
        ]
    }
}
